/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TestLibEcdsaUtilsInterface extends ethers.utils.Interface {
  functions: {
    "recover(bytes,bool,uint8,bytes32,bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "recover",
    values: [BytesLike, boolean, BigNumberish, BytesLike, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "recover", data: BytesLike): Result;

  events: {};
}

export class TestLibEcdsaUtils extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TestLibEcdsaUtilsInterface;

  functions: {
    recover(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _sender: string;
      0: string;
    }>;

    "recover(bytes,bool,uint8,bytes32,bytes32)"(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _sender: string;
      0: string;
    }>;
  };

  recover(
    _message: BytesLike,
    _isEthSignedMessage: boolean,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "recover(bytes,bool,uint8,bytes32,bytes32)"(
    _message: BytesLike,
    _isEthSignedMessage: boolean,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    recover(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "recover(bytes,bool,uint8,bytes32,bytes32)"(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    recover(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "recover(bytes,bool,uint8,bytes32,bytes32)"(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    recover(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "recover(bytes,bool,uint8,bytes32,bytes32)"(
      _message: BytesLike,
      _isEthSignedMessage: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
