/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { TestLibRlpWriter } from "./TestLibRlpWriter";

export class TestLibRlpWriterFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestLibRlpWriter> {
    return super.deploy(overrides || {}) as Promise<TestLibRlpWriter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestLibRlpWriter {
    return super.attach(address) as TestLibRlpWriter;
  }
  connect(signer: Signer): TestLibRlpWriterFactory {
    return super.connect(signer) as TestLibRlpWriterFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLibRlpWriter {
    return new Contract(address, _abi, signerOrProvider) as TestLibRlpWriter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_in",
        type: "address"
      }
    ],
    name: "writeAddress",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_in",
        type: "address"
      }
    ],
    name: "writeAddressWithTaintedMemory",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_in",
        type: "bool"
      }
    ],
    name: "writeBool",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "writeBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_in",
        type: "bytes[]"
      }
    ],
    name: "writeList",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_in",
        type: "string"
      }
    ],
    name: "writeString",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_in",
        type: "uint256"
      }
    ],
    name: "writeUint",
    outputs: [
      {
        internalType: "bytes",
        name: "_out",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f7c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637932db751161005b5780637932db75146100d157806397563ac8146100e45780639e5c65b7146100f7578063dd2062021461010a5761007d565b80633c5cee26146100825780633cbd1712146100ab5780635e25d23f146100be575b600080fd5b6100956100903660046107bf565b61011d565b6040516100a291906108cd565b60405180910390f35b6100956100b9366004610860565b610130565b6100956100cc3660046106ff565b61013b565b6100956100df3660046107df565b610146565b6100956100f23660046106ff565b610151565b610095610105366004610726565b610186565b61009561011836600461081a565b610191565b60606101288261019c565b90505b919050565b606061012882610200565b606061012882610213565b606061012882610239565b606060405161015f90610681565b604051809103906000f08015801561017b573d6000803e3d6000fd5b505061012882610213565b6060610128826102a2565b606061012882610146565b60408051600180825281830190925260609160009190602082018180368337019050509050826101d057600160ff1b6101d6565b600160f81b5b816000815181106101e357fe5b60200101906001600160f81b031916908160001a90535092915050565b606061012861020e836102e6565b610239565b6060610128826040516020016102299190610878565b6040516020818303038152906040525b60608082516001148015610261575060808360008151811061025757fe5b016020015160f81c105b1561026d575081610128565b610279835160806103eb565b8360405160200161028b929190610895565b604051602081830303815290604052905092915050565b606060006102af8361053c565b90506102bd815160c06103eb565b816040516020016102cf929190610895565b604051602081830303815290604052915050919050565b60606000826040516020016102fb91906108c4565b604051602081830303815290604052905060005b60208110156103455781818151811061032457fe5b01602001516001600160f81b0319161561033d57610345565b60010161030f565b60008160200367ffffffffffffffff8111801561036157600080fd5b506040519080825280601f01601f19166020018201604052801561038c576020820181803683370190505b50905060005b81518110156103e25783516001840193859181106103ac57fe5b602001015160f81c60f81b8282815181106103c357fe5b60200101906001600160f81b031916908160001a905350600101610392565b50949350505050565b6060806038841015610445576040805160018082528183019092529060208201818036833701905050905082840160f81b8160008151811061042957fe5b60200101906001600160f81b031916908160001a905350610535565b600060015b80868161045357fe5b0415610468576001909101906101000261044a565b8160010167ffffffffffffffff8111801561048257600080fd5b506040519080825280601f01601f1916602001820160405280156104ad576020820181803683370190505b50925084820160370160f81b836000815181106104c657fe5b60200101906001600160f81b031916908160001a905350600190505b818111610532576101008183036101000a87816104fb57fe5b048161050357fe5b0660f81b83828151811061051357fe5b60200101906001600160f81b031916908160001a9053506001016104e2565b50505b9392505050565b606081516000141561055d575060408051600081526020810190915261012b565b6000805b83518110156105905783818151811061057657fe5b602002602001015151820191508080600101915050610561565b60008267ffffffffffffffff811180156105a957600080fd5b506040519080825280601f01601f1916602001820160405280156105d4576020820181803683370190505b50600092509050602081015b85518310156103e25760008684815181106105f757fe5b6020026020010151905060006020820190506106158382845161063d565b87858151811061062157fe5b60200260200101515183019250505082806001019350506105e0565b8282825b60208110610660578151835260209283019290910190601f1901610641565b905182516020929092036101000a6000190180199091169116179052505050565b61061b8061095583390190565b600067ffffffffffffffff8311156106a257fe5b6106b5601f8401601f1916602001610900565b90508281528383830111156106c957600080fd5b828260208301376000602084830101529392505050565b600082601f8301126106f0578081fd5b6105358383356020850161068e565b600060208284031215610710578081fd5b81356001600160a01b0381168114610535578182fd5b60006020808385031215610738578182fd5b823567ffffffffffffffff8082111561074f578384fd5b818501915085601f830112610762578384fd5b81358181111561076e57fe5b61077b8485830201610900565b8181528481019250838501865b838110156107b15761079f8a8884358901016106e0565b85529386019390860190600101610788565b509098975050505050505050565b6000602082840312156107d0578081fd5b81358015158114610535578182fd5b6000602082840312156107f0578081fd5b813567ffffffffffffffff811115610806578182fd5b610812848285016106e0565b949350505050565b60006020828403121561082b578081fd5b813567ffffffffffffffff811115610841578182fd5b8201601f81018413610851578182fd5b6108128482356020840161068e565b600060208284031215610871578081fd5b5035919050565b60609190911b6bffffffffffffffffffffffff1916815260140190565b600083516108a7818460208801610924565b8351908301906108bb818360208801610924565b01949350505050565b90815260200190565b60006020825282518060208401526108ec816040850160208701610924565b601f01601f19169190910160400192915050565b60405181810167ffffffffffffffff8111828210171561091c57fe5b604052919050565b60005b8381101561093f578181015183820152602001610927565b8381111561094e576000848401525b5050505056fe608060405234801561001057600080fd5b506105fb806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f19146101ce57806370a08231146101fc57806395d89b4114610222578063a9059cbb1461022a578063dd62ed3e146102565761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab610284565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b0381351690602001356102a4565b604080519115158252519081900360200190f35b6101686102bb565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b038135811691602081013590911690604001356102c1565b6101b8610355565b6040805160ff9092168252519081900360200190f35b6101fa600480360360408110156101e457600080fd5b506001600160a01b03813516906020013561035a565b005b6101686004803603602081101561021257600080fd5b50356001600160a01b03166103e4565b6100ab6103f6565b61014c6004803603604081101561024057600080fd5b506001600160a01b038135169060200135610415565b6101686004803603604081101561026c57600080fd5b506001600160a01b0381358116916020013516610422565b6040518060400160405280600481526020016315195cdd60e21b81525081565b60006102b133848461043f565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610340576001600160a01b038416600090815260026020908152604080832033845290915290205461031b90836104a1565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61034b8484846104f1565b5060019392505050565b601281565b600054610367908261059f565b60009081556001600160a01b03831681526001602052604090205461038c908261059f565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60016020526000908152604090205481565b604051806040016040528060038152602001621514d560ea1b81525081565b60006102b13384846104f1565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b808203828111156102b5576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b03831660009081526001602052604090205461051490826104a1565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610543908261059f565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b808201828110156102b5576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea164736f6c6343000706000aa164736f6c6343000706000a";
