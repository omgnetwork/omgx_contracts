/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { TestLibRlpReader } from "./TestLibRlpReader";

export class TestLibRlpReaderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestLibRlpReader> {
    return super.deploy(overrides || {}) as Promise<TestLibRlpReader>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestLibRlpReader {
    return super.attach(address) as TestLibRlpReader;
  }
  connect(signer: Signer): TestLibRlpReaderFactory {
    return super.connect(signer) as TestLibRlpReaderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLibRlpReader {
    return new Contract(address, _abi, signerOrProvider) as TestLibRlpReader;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readList",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_in",
        type: "bytes"
      }
    ],
    name: "readUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x60806040523480156100195760008061001661001f565b50505b5061008a565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561005757808601518282016040015260200161003c565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b610e54806100996000396000f3fe608060405234801561001957600080610016610bcd565b50505b50600436106100865760003560e01c80635f71b98d116100645780635f71b98d146100fd57806384147d531461011d5780638b33268b14610130578063a39d36711461014357610086565b806316b3269e1461009457806331d12cd3146100bd578063359835b5146100dd575b600080610091610bcd565b50505b6100a76100a2366004610c4f565b610163565b6040516100b49190610dd5565b60405180910390f35b6100d06100cb366004610c4f565b610176565b6040516100b49190610dde565b6100f06100eb366004610c4f565b610181565b6040516100b49190610d6a565b61011061010b366004610c4f565b610239565b6040516100b49190610dca565b6100a761012b366004610c4f565b610244565b6100d061013e366004610c4f565b61024f565b610156610151366004610c4f565b61025a565b6040516100b49190610d56565b600061016e82610265565b90505b919050565b606061016e82610278565b6060600061018e8361028b565b90506000815167ffffffffffffffff811180156101b3576000806101b0610bcd565b50505b506040519080825280602002602001820160405280156101e757816020015b60608152602001906001900390816101d25790505b50905060005b81518110156102315761021283828151811061020557fe5b602002602001015161029e565b82828151811061021e57fe5b60209081029190910101526001016101ed565b509392505050565b600061016e826102a9565b600061016e826102bc565b606061016e826102cf565b600061016e826102e2565b600061016e610273836102f5565b61031d565b606061016e610286836102f5565b610328565b606061016e610299836102f5565b610333565b606061016e826104bf565b600061016e6102b7836102f5565b6104d2565b600061016e6102ca836102f5565b61059e565b606061016e6102dd836102f5565b6106ac565b600061016e6102f0836102f5565b610743565b6102fd610c38565b602082016040518060400160405280845181526020019190915292915050565b600061016e8261059e565b606061016e826106ac565b6060600080610341846107be565b9193509091506001905081600181111561035757fe5b146103b15760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401604051809103906103ae610bcd565b50505b600060206040519080825280602002602001820160405280156103ee57816020015b6103db610c38565b8152602001906001900390816103d35790505b5090506000835b86518110156104b457602082106104465760405162461bcd60e51b815260040180806020018281038252602a815260200180610df2602a913960400191505060405180910390610443610bcd565b50505b60008061046e6040516040808201905280858c51038152602001858c602001510190526107be565b509150915060405180604001604052808383018152602001848b6020015101905285858151811061049b57fe5b60209081029190910101526001939093019201016103f5565b508152949350505050565b606061016e826020015160008451610b19565b600081516001146105325760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020626f6f6c65616e2076616c75652e00000000000060448201526064016040518091039061052f610bcd565b50505b6000826020015190506000815160001a90508015806105515750806001145b6105955760405162461bcd60e51b8152600401808060200182810382526038815260200180610e1c6038913960400191505060405180910390610592610bcd565b50505b15159392505050565b60006021825111156105ff5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401604051809103906105fc610bcd565b50505b600080600061060d856107be565b91945092509050600081600181111561062257fe5b1461067c5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640160405180910390610679610bcd565b50505b600083866020015101905060008151905060208410156106a25760208490036101000a90045b9695505050505050565b606060008060006106bc856107be565b9194509250905060008160018111156106d157fe5b1461072b5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e0000000000000000604482015260640160405180910390610728610bcd565b50505b61073a85602001518484610b19565b95945050505050565b600081516001141561075757506000610171565b81516015146107b55760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020616464726573732076616c75652e0000000000006044820152606401604051809103906107b2610bcd565b50505b61016e8261031d565b600080808084511161081f5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016040518091039061081c610bcd565b50505b6000846020015190506000815160001a9050607f811161084c576000600160009450945094505050610b12565b60b781116108c857607f198101808751116108b65760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401604051809103906108b3610bcd565b50505b60019550935060009250610b12915050565b60bf81116109b85760b6198101808751116109325760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016040518091039061092f610bcd565b50505b6000816020036101000a60018501510490508181018851116109a35760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401604051809103906109a0610bcd565b50505b60019091019550935060009250610b12915050565b60f78111610a335760bf19810180875111610a225760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e000000000000000000604482015260640160405180910390610a1f610bcd565b50505b600195509350849250610b12915050565b60f619810180875111610a955760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e000000604482015260640160405180910390610a92610bcd565b50505b6000816020036101000a6001850151049050818101885111610aff5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b604482015260640160405180910390610afc610bcd565b50505b6001918201965094509250610b12915050565b9193909250565b606060008267ffffffffffffffff81118015610b3d57600080610b3a610bcd565b50505b50604051818152601f19601f8301168101602001604052908015610b68576020820181803683370190505b5090508051610b78579050610bc6565b8484016020820160005b60208604811015610ba3578251825260209283019290910190600101610b82565b50600019601f86166020036101000a018082511681198451161790915250909150505b9392505050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610c05578086015182820160400152602001610bea565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b604051604080820190526000808252602082015290565b60006020808385031215610c6a578182610c67610bcd565b50505b823567ffffffffffffffff80821115610c8a578384610c87610bcd565b50505b818501915085601f830112610ca6578384610ca3610bcd565b50505b813581811115610cb257fe5b604051601f8201601f1916810185018381118282101715610ccf57fe5b6040528181528382018501881015610cee578586610ceb610bcd565b50505b818585018683013790810190930193909352509392505050565b60008151808452815b81811015610d3057602080828601015186830190910152602001610d11565b81811115610d415782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015610dbd57878503603f19018452610dab858351610d08565b94509285019290850190600101610d8f565b5092979650505050505050565b901515815260200190565b90815260200190565b600060208252610bc66020830184610d0856fe50726f766964656420524c50206c6973742065786365656473206d6178206c697374206c656e6774682e4c69625f524c505265616465723a20496e76616c696420524c5020626f6f6c65616e2076616c75652c206d7573742062652030206f722031";
