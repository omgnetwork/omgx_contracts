/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { OvmL1MessageSender } from "./OvmL1MessageSender";

export class OvmL1MessageSenderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OvmL1MessageSender> {
    return super.deploy(overrides || {}) as Promise<OvmL1MessageSender>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OvmL1MessageSender {
    return super.attach(address) as OvmL1MessageSender;
  }
  connect(signer: Signer): OvmL1MessageSenderFactory {
    return super.connect(signer) as OvmL1MessageSenderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OvmL1MessageSender {
    return new Contract(address, _abi, signerOrProvider) as OvmL1MessageSender;
  }
}

const _abi = [
  {
    inputs: [],
    name: "getL1MessageSender",
    outputs: [
      {
        internalType: "address",
        name: "_l1MessageSender",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040523480156100195760008061001661001f565b50505b5061008a565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561005757808601518282016040015260200161003c565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b61030d806100996000396000f3fe60806040523480156100195760008061001661010f565b50505b50600436106100345760003560e01c8063d203410614610042575b60008061003f61010f565b50505b61004a610066565b6040516001600160a01b03909116815260200160405180910390f35b60005a61007161017a565b6001600160a01b0316639dc9dc936040518163ffffffff1660e01b815260040160206040518083038186806100a46101d4565b1580156100b9576000806100b661010f565b50505b505a6100c3610220565b50505050501580156100e2573d6000803e3d60006100df61010f565b50505b505050506040513d6020811015610101576000806100fe61010f565b50505b810190808051935050505090565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561014757808601518282016040015260200161012c565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156101cf576000828201526020016101b8565b505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b805160008252935060206101b8565b638540661f598160e01b8152610253565b808083111561023d5750815b92915050565b808083101561023d575090919050565b836004820152846024820152606060448201528660648201526084810160005b8881101561028b578088015182820152602001610273565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af150596102e08d3d610243565b8c016102ec8187610231565b5b8281101561030157600081526020016102ed565b50929c5050505050505056";
