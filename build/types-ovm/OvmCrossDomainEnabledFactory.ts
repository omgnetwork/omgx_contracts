/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { OvmCrossDomainEnabled } from "./OvmCrossDomainEnabled";

export class OvmCrossDomainEnabledFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _messenger: string,
    overrides?: Overrides
  ): Promise<OvmCrossDomainEnabled> {
    return super.deploy(_messenger, overrides || {}) as Promise<
      OvmCrossDomainEnabled
    >;
  }
  getDeployTransaction(
    _messenger: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_messenger, overrides || {});
  }
  attach(address: string): OvmCrossDomainEnabled {
    return super.attach(address) as OvmCrossDomainEnabled;
  }
  connect(signer: Signer): OvmCrossDomainEnabledFactory {
    return super.connect(signer) as OvmCrossDomainEnabledFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OvmCrossDomainEnabled {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OvmCrossDomainEnabled;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_messenger",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040523480156100195760008061001661008a565b50505b50604051610301380380610301833981810160405260208110156100455760008061004261008a565b50505b81019080805192508291506000905060018161005f6100f5565b816001600160a01b0302191690836001600160a01b0316021790610081610155565b505050506101a3565b632a2a7adb598160e01b8152600481016020815285602082015260005b868110156100c25780860151828201604001526020016100a7565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b604081101561015057600082820152602001610139565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020610139565b61014f806101b26000396000f3fe608060405234801561001957600080610016610084565b50505b50600436106100345760003560e01c80633cb747bf14610042575b60008061003f610084565b50505b61004a610066565b6040516001600160a01b03909116815260200160405180910390f35b6000806100716100ef565b906101000a90046001600160a01b031681565b632a2a7adb598160e01b8152600481016020815285602082015260005b868110156100bc5780860151828201604001526020016100a1565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b604081101561014a57600082820152602001610133565b50505056";
