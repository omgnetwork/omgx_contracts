/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { LibResolvedDelegateProxy } from "./LibResolvedDelegateProxy";

export class LibResolvedDelegateProxyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _libAddressManager: string,
    _implementationName: string,
    overrides?: Overrides
  ): Promise<LibResolvedDelegateProxy> {
    return super.deploy(
      _libAddressManager,
      _implementationName,
      overrides || {}
    ) as Promise<LibResolvedDelegateProxy>;
  }
  getDeployTransaction(
    _libAddressManager: string,
    _implementationName: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _libAddressManager,
      _implementationName,
      overrides || {}
    );
  }
  attach(address: string): LibResolvedDelegateProxy {
    return super.attach(address) as LibResolvedDelegateProxy;
  }
  connect(signer: Signer): LibResolvedDelegateProxyFactory {
    return super.connect(signer) as LibResolvedDelegateProxyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibResolvedDelegateProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LibResolvedDelegateProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_libAddressManager",
        type: "address"
      },
      {
        internalType: "string",
        name: "_implementationName",
        type: "string"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  }
];

const _bytecode =
  "0x60806040523480156200001c57600080620000196200027a565b50505b5060405162000a1038038062000a10833981810160405260408110156200004d576000806200004a6200027a565b50505b8101908080519291906020018051604051939291908464010000000082111562000081576000806200007e6200027a565b50505b908301906020820185811115620000a2576000806200009f6200027a565b50505b8251640100000000811182820188101715620000c857600080620000c56200027a565b50505b825250602001908051906020019080838360005b83811015620000f6578082015183820152602001620000dc565b50505050905090810190601f168015620001245780820380516001836020036101000a031916815260200191505b5060405250505081600160005a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b604081101562000188576000828201526020016200016f565b5050506001600160a01b03166001600160a01b03168152602001908152602001600020600181620001b8620002e7565b816001600160a01b0302191690836001600160a01b0316021790620001dc62000349565b505050806000805a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b60408110156200023b5760008282015260200162000222565b5050506001600160a01b03166001600160a01b031681526020019081526020016000209080516200027192916020019062000398565b5050506200047d565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015620002b457808601518282016040015260200162000297565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b604081101562000344576000828201526020016200032b565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b6000815260206200032b565b8280620003a4620002e7565b600181600116156101000203166002900490600052602060002090601f016020900481019282620003e457600085620003dc62000349565b505062000448565b82601f106200040257805160ff19168380011785620003dc62000349565b828001600101856200041362000349565b5050821562000448579182015b8281111562000448578251826200043662000349565b50509160200191906001019062000420565b50620004569291506200045a565b5090565b808211156200045657600080826200047162000349565b5050506001016200045a565b610583806200048d6000396000f3fe60806040526000600160005a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b604081101561006057600082820152602001610049565b5050506001600160a01b03166001600160a01b0316815260200190815260200160002060009061008e61034a565b906101000a90046001600160a01b03166001600160a01b031663bf40fac16000805a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b6040811015610105576000828201526020016100ee565b5050506001600160a01b03166001600160a01b031681526020019081526020016000206040518263ffffffff1660e01b81526004018080602001828103825283818161014f61034a565b6001816001161561010002031660029004815260200191508061017061034a565b600181600116156101000203166002900480156101dc5780601f106101aa57610100808361019c61034a565b0402835291602001916101dc565b820191906000526020600020905b816101c161034a565b815290600101906020018083116101b857829003601f168201915b50509250505060206040518083038186806101f56103aa565b15801561020a576000806102076103f6565b50505b505a610214610461565b5050505050158015610233573d6000803e3d60006102306103f6565b50505b505050506040513d60208110156102525760008061024f6103f6565b50505b81019080805193505050506001600160a01b0381166102ab5760405162461bcd60e51b815260040180806020018281038252602381526020018061056060239139604001915050604051809103906102a86103f6565b50505b600080826001600160a01b0316600036604051808383808284378083019250505092505050600060405180830381855a6102e361054e565b50505050509150503d8060008114610317576040513d603f01601f191681016040523d815291503d6000602084013e61031c565b606091505b5090925090506001821515141561033557805160208201f35b8051602082016103436103f6565b5050505050005b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156103a55760008282015260200161038e565b505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051600082529350602061038e565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561042e578086015182820160400152602001610413565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b638540661f598160e01b8152610494565b808083111561047e5750815b92915050565b808083101561047e575090919050565b836004820152846024820152606060448201528660648201526084810160005b888110156104cc5780880151828201526020016104b4565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af150596105218d3d610484565b8c0161052d8187610472565b5b82811015610542576000815260200161052e565b50929c50505050505050565b63ffe73914598160e01b815261049456fe5461726765742061646472657373206d75737420626520696e697469616c697a65642e";
