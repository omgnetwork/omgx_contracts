/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IOvmExecutionManagerInterface extends ethers.utils.Interface {
  functions: {
    "getMaxTransactionGasLimit()": FunctionFragment;
    "ovmADDRESS()": FunctionFragment;
    "ovmCALL(uint256,address,bytes)": FunctionFragment;
    "ovmCALLER()": FunctionFragment;
    "ovmCHAINID()": FunctionFragment;
    "ovmCREATE(bytes)": FunctionFragment;
    "ovmCREATE2(bytes,bytes32)": FunctionFragment;
    "ovmCREATEEOA(bytes32,uint8,bytes32,bytes32)": FunctionFragment;
    "ovmDELEGATECALL(uint256,address,bytes)": FunctionFragment;
    "ovmEXTCODECOPY(address,uint256,uint256)": FunctionFragment;
    "ovmEXTCODEHASH(address)": FunctionFragment;
    "ovmEXTCODESIZE(address)": FunctionFragment;
    "ovmGASLIMIT()": FunctionFragment;
    "ovmGETNONCE()": FunctionFragment;
    "ovmINCREMENTNONCE()": FunctionFragment;
    "ovmL1QUEUEORIGIN()": FunctionFragment;
    "ovmL1TXORIGIN()": FunctionFragment;
    "ovmNUMBER()": FunctionFragment;
    "ovmREVERT(bytes)": FunctionFragment;
    "ovmSLOAD(bytes32)": FunctionFragment;
    "ovmSSTORE(bytes32,bytes32)": FunctionFragment;
    "ovmSTATICCALL(uint256,address,bytes)": FunctionFragment;
    "ovmTIMESTAMP()": FunctionFragment;
    "run(tuple,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getMaxTransactionGasLimit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmCALL",
    values: [BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "ovmCALLER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ovmCHAINID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmCREATE",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmCREATE2",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmCREATEEOA",
    values: [BytesLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmDELEGATECALL",
    values: [BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmEXTCODECOPY",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmEXTCODEHASH",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmEXTCODESIZE",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmGASLIMIT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmGETNONCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmINCREMENTNONCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmL1QUEUEORIGIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ovmL1TXORIGIN",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ovmNUMBER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ovmREVERT",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "ovmSLOAD", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "ovmSSTORE",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmSTATICCALL",
    values: [BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ovmTIMESTAMP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "run",
    values: [
      {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      string
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "getMaxTransactionGasLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ovmADDRESS", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmCALL", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmCALLER", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmCHAINID", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmCREATE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmCREATE2", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ovmCREATEEOA",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmDELEGATECALL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmEXTCODECOPY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmEXTCODEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmEXTCODESIZE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmGASLIMIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmGETNONCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmINCREMENTNONCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmL1QUEUEORIGIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmL1TXORIGIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ovmNUMBER", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmREVERT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmSLOAD", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ovmSSTORE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ovmSTATICCALL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ovmTIMESTAMP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "run", data: BytesLike): Result;

  events: {};
}

export class IOvmExecutionManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IOvmExecutionManagerInterface;

  functions: {
    getMaxTransactionGasLimit(
      overrides?: CallOverrides
    ): Promise<{
      _maxTransactionGasLimit: BigNumber;
      0: BigNumber;
    }>;

    "getMaxTransactionGasLimit()"(
      overrides?: CallOverrides
    ): Promise<{
      _maxTransactionGasLimit: BigNumber;
      0: BigNumber;
    }>;

    ovmADDRESS(
      overrides?: CallOverrides
    ): Promise<{
      _address: string;
      0: string;
    }>;

    "ovmADDRESS()"(
      overrides?: CallOverrides
    ): Promise<{
      _address: string;
      0: string;
    }>;

    ovmCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmCALLER(
      overrides?: CallOverrides
    ): Promise<{
      _caller: string;
      0: string;
    }>;

    "ovmCALLER()"(
      overrides?: CallOverrides
    ): Promise<{
      _caller: string;
      0: string;
    }>;

    ovmCHAINID(
      overrides?: CallOverrides
    ): Promise<{
      _chainId: BigNumber;
      0: BigNumber;
    }>;

    "ovmCHAINID()"(
      overrides?: CallOverrides
    ): Promise<{
      _chainId: BigNumber;
      0: BigNumber;
    }>;

    ovmCREATE(
      _bytecode: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmCREATE(bytes)"(
      _bytecode: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmCREATE2(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmCREATE2(bytes,bytes32)"(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmCREATEEOA(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmCREATEEOA(bytes32,uint8,bytes32,bytes32)"(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmDELEGATECALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmDELEGATECALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmEXTCODECOPY(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmEXTCODECOPY(address,uint256,uint256)"(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmEXTCODEHASH(
      _contract: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmEXTCODEHASH(address)"(
      _contract: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmEXTCODESIZE(
      _contract: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmEXTCODESIZE(address)"(
      _contract: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmGASLIMIT(
      overrides?: CallOverrides
    ): Promise<{
      _gasLimit: BigNumber;
      0: BigNumber;
    }>;

    "ovmGASLIMIT()"(
      overrides?: CallOverrides
    ): Promise<{
      _gasLimit: BigNumber;
      0: BigNumber;
    }>;

    ovmGETNONCE(overrides?: Overrides): Promise<ContractTransaction>;

    "ovmGETNONCE()"(overrides?: Overrides): Promise<ContractTransaction>;

    ovmINCREMENTNONCE(overrides?: Overrides): Promise<ContractTransaction>;

    "ovmINCREMENTNONCE()"(overrides?: Overrides): Promise<ContractTransaction>;

    ovmL1QUEUEORIGIN(
      overrides?: CallOverrides
    ): Promise<{
      _queueOrigin: number;
      0: number;
    }>;

    "ovmL1QUEUEORIGIN()"(
      overrides?: CallOverrides
    ): Promise<{
      _queueOrigin: number;
      0: number;
    }>;

    ovmL1TXORIGIN(
      overrides?: CallOverrides
    ): Promise<{
      _l1TxOrigin: string;
      0: string;
    }>;

    "ovmL1TXORIGIN()"(
      overrides?: CallOverrides
    ): Promise<{
      _l1TxOrigin: string;
      0: string;
    }>;

    ovmNUMBER(
      overrides?: CallOverrides
    ): Promise<{
      _number: BigNumber;
      0: BigNumber;
    }>;

    "ovmNUMBER()"(
      overrides?: CallOverrides
    ): Promise<{
      _number: BigNumber;
      0: BigNumber;
    }>;

    ovmREVERT(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmREVERT(bytes)"(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmSLOAD(
      _key: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmSLOAD(bytes32)"(
      _key: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmSSTORE(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmSSTORE(bytes32,bytes32)"(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmSTATICCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "ovmSTATICCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ovmTIMESTAMP(
      overrides?: CallOverrides
    ): Promise<{
      _timestamp: BigNumber;
      0: BigNumber;
    }>;

    "ovmTIMESTAMP()"(
      overrides?: CallOverrides
    ): Promise<{
      _timestamp: BigNumber;
      0: BigNumber;
    }>;

    run(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "run(tuple,address)"(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getMaxTransactionGasLimit(overrides?: CallOverrides): Promise<BigNumber>;

  "getMaxTransactionGasLimit()"(overrides?: CallOverrides): Promise<BigNumber>;

  ovmADDRESS(overrides?: CallOverrides): Promise<string>;

  "ovmADDRESS()"(overrides?: CallOverrides): Promise<string>;

  ovmCALL(
    _gasLimit: BigNumberish,
    _address: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmCALL(uint256,address,bytes)"(
    _gasLimit: BigNumberish,
    _address: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmCALLER(overrides?: CallOverrides): Promise<string>;

  "ovmCALLER()"(overrides?: CallOverrides): Promise<string>;

  ovmCHAINID(overrides?: CallOverrides): Promise<BigNumber>;

  "ovmCHAINID()"(overrides?: CallOverrides): Promise<BigNumber>;

  ovmCREATE(
    _bytecode: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmCREATE(bytes)"(
    _bytecode: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmCREATE2(
    _bytecode: BytesLike,
    _salt: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmCREATE2(bytes,bytes32)"(
    _bytecode: BytesLike,
    _salt: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmCREATEEOA(
    _messageHash: BytesLike,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmCREATEEOA(bytes32,uint8,bytes32,bytes32)"(
    _messageHash: BytesLike,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmDELEGATECALL(
    _gasLimit: BigNumberish,
    _address: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmDELEGATECALL(uint256,address,bytes)"(
    _gasLimit: BigNumberish,
    _address: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmEXTCODECOPY(
    _contract: string,
    _offset: BigNumberish,
    _length: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmEXTCODECOPY(address,uint256,uint256)"(
    _contract: string,
    _offset: BigNumberish,
    _length: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmEXTCODEHASH(
    _contract: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmEXTCODEHASH(address)"(
    _contract: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmEXTCODESIZE(
    _contract: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmEXTCODESIZE(address)"(
    _contract: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmGASLIMIT(overrides?: CallOverrides): Promise<BigNumber>;

  "ovmGASLIMIT()"(overrides?: CallOverrides): Promise<BigNumber>;

  ovmGETNONCE(overrides?: Overrides): Promise<ContractTransaction>;

  "ovmGETNONCE()"(overrides?: Overrides): Promise<ContractTransaction>;

  ovmINCREMENTNONCE(overrides?: Overrides): Promise<ContractTransaction>;

  "ovmINCREMENTNONCE()"(overrides?: Overrides): Promise<ContractTransaction>;

  ovmL1QUEUEORIGIN(overrides?: CallOverrides): Promise<number>;

  "ovmL1QUEUEORIGIN()"(overrides?: CallOverrides): Promise<number>;

  ovmL1TXORIGIN(overrides?: CallOverrides): Promise<string>;

  "ovmL1TXORIGIN()"(overrides?: CallOverrides): Promise<string>;

  ovmNUMBER(overrides?: CallOverrides): Promise<BigNumber>;

  "ovmNUMBER()"(overrides?: CallOverrides): Promise<BigNumber>;

  ovmREVERT(
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmREVERT(bytes)"(
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmSLOAD(
    _key: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmSLOAD(bytes32)"(
    _key: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmSSTORE(
    _key: BytesLike,
    _value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmSSTORE(bytes32,bytes32)"(
    _key: BytesLike,
    _value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmSTATICCALL(
    _gasLimit: BigNumberish,
    _address: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "ovmSTATICCALL(uint256,address,bytes)"(
    _gasLimit: BigNumberish,
    _address: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ovmTIMESTAMP(overrides?: CallOverrides): Promise<BigNumber>;

  "ovmTIMESTAMP()"(overrides?: CallOverrides): Promise<BigNumber>;

  run(
    _transaction: {
      timestamp: BigNumberish;
      blockNumber: BigNumberish;
      l1QueueOrigin: BigNumberish;
      l1TxOrigin: string;
      entrypoint: string;
      gasLimit: BigNumberish;
      data: BytesLike;
    },
    _txStateManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "run(tuple,address)"(
    _transaction: {
      timestamp: BigNumberish;
      blockNumber: BigNumberish;
      l1QueueOrigin: BigNumberish;
      l1TxOrigin: string;
      entrypoint: string;
      gasLimit: BigNumberish;
      data: BytesLike;
    },
    _txStateManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getMaxTransactionGasLimit(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxTransactionGasLimit()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ovmADDRESS(overrides?: CallOverrides): Promise<string>;

    "ovmADDRESS()"(overrides?: CallOverrides): Promise<string>;

    ovmCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _success: boolean;
      _returndata: string;
      0: boolean;
      1: string;
    }>;

    "ovmCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _success: boolean;
      _returndata: string;
      0: boolean;
      1: string;
    }>;

    ovmCALLER(overrides?: CallOverrides): Promise<string>;

    "ovmCALLER()"(overrides?: CallOverrides): Promise<string>;

    ovmCHAINID(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmCHAINID()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmCREATE(
      _bytecode: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _contract: string;
      _revertdata: string;
      0: string;
      1: string;
    }>;

    "ovmCREATE(bytes)"(
      _bytecode: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _contract: string;
      _revertdata: string;
      0: string;
      1: string;
    }>;

    ovmCREATE2(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _contract: string;
      _revertdata: string;
      0: string;
      1: string;
    }>;

    "ovmCREATE2(bytes,bytes32)"(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _contract: string;
      _revertdata: string;
      0: string;
      1: string;
    }>;

    ovmCREATEEOA(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "ovmCREATEEOA(bytes32,uint8,bytes32,bytes32)"(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    ovmDELEGATECALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _success: boolean;
      _returndata: string;
      0: boolean;
      1: string;
    }>;

    "ovmDELEGATECALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _success: boolean;
      _returndata: string;
      0: boolean;
      1: string;
    }>;

    ovmEXTCODECOPY(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "ovmEXTCODECOPY(address,uint256,uint256)"(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    ovmEXTCODEHASH(
      _contract: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "ovmEXTCODEHASH(address)"(
      _contract: string,
      overrides?: CallOverrides
    ): Promise<string>;

    ovmEXTCODESIZE(
      _contract: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ovmEXTCODESIZE(address)"(
      _contract: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ovmGASLIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmGASLIMIT()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmGETNONCE(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmGETNONCE()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmINCREMENTNONCE(overrides?: CallOverrides): Promise<void>;

    "ovmINCREMENTNONCE()"(overrides?: CallOverrides): Promise<void>;

    ovmL1QUEUEORIGIN(overrides?: CallOverrides): Promise<number>;

    "ovmL1QUEUEORIGIN()"(overrides?: CallOverrides): Promise<number>;

    ovmL1TXORIGIN(overrides?: CallOverrides): Promise<string>;

    "ovmL1TXORIGIN()"(overrides?: CallOverrides): Promise<string>;

    ovmNUMBER(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmNUMBER()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmREVERT(_data: BytesLike, overrides?: CallOverrides): Promise<void>;

    "ovmREVERT(bytes)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    ovmSLOAD(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "ovmSLOAD(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    ovmSSTORE(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "ovmSSTORE(bytes32,bytes32)"(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    ovmSTATICCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _success: boolean;
      _returndata: string;
      0: boolean;
      1: string;
    }>;

    "ovmSTATICCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _success: boolean;
      _returndata: string;
      0: boolean;
      1: string;
    }>;

    ovmTIMESTAMP(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmTIMESTAMP()"(overrides?: CallOverrides): Promise<BigNumber>;

    run(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "run(tuple,address)"(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getMaxTransactionGasLimit(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxTransactionGasLimit()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ovmADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmADDRESS()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmCALLER(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmCALLER()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmCHAINID(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmCHAINID()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmCREATE(_bytecode: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "ovmCREATE(bytes)"(
      _bytecode: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmCREATE2(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmCREATE2(bytes,bytes32)"(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmCREATEEOA(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmCREATEEOA(bytes32,uint8,bytes32,bytes32)"(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmDELEGATECALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmDELEGATECALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmEXTCODECOPY(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmEXTCODECOPY(address,uint256,uint256)"(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmEXTCODEHASH(
      _contract: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmEXTCODEHASH(address)"(
      _contract: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmEXTCODESIZE(
      _contract: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmEXTCODESIZE(address)"(
      _contract: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmGASLIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmGASLIMIT()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmGETNONCE(overrides?: Overrides): Promise<BigNumber>;

    "ovmGETNONCE()"(overrides?: Overrides): Promise<BigNumber>;

    ovmINCREMENTNONCE(overrides?: Overrides): Promise<BigNumber>;

    "ovmINCREMENTNONCE()"(overrides?: Overrides): Promise<BigNumber>;

    ovmL1QUEUEORIGIN(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmL1QUEUEORIGIN()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmL1TXORIGIN(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmL1TXORIGIN()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmNUMBER(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmNUMBER()"(overrides?: CallOverrides): Promise<BigNumber>;

    ovmREVERT(_data: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "ovmREVERT(bytes)"(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmSLOAD(_key: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "ovmSLOAD(bytes32)"(
      _key: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmSSTORE(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmSSTORE(bytes32,bytes32)"(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmSTATICCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "ovmSTATICCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ovmTIMESTAMP(overrides?: CallOverrides): Promise<BigNumber>;

    "ovmTIMESTAMP()"(overrides?: CallOverrides): Promise<BigNumber>;

    run(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "run(tuple,address)"(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getMaxTransactionGasLimit(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxTransactionGasLimit()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ovmADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmADDRESS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ovmCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmCALLER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmCALLER()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ovmCHAINID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmCHAINID()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ovmCREATE(
      _bytecode: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmCREATE(bytes)"(
      _bytecode: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmCREATE2(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmCREATE2(bytes,bytes32)"(
      _bytecode: BytesLike,
      _salt: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmCREATEEOA(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmCREATEEOA(bytes32,uint8,bytes32,bytes32)"(
      _messageHash: BytesLike,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmDELEGATECALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmDELEGATECALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmEXTCODECOPY(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmEXTCODECOPY(address,uint256,uint256)"(
      _contract: string,
      _offset: BigNumberish,
      _length: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmEXTCODEHASH(
      _contract: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmEXTCODEHASH(address)"(
      _contract: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmEXTCODESIZE(
      _contract: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmEXTCODESIZE(address)"(
      _contract: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmGASLIMIT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmGASLIMIT()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ovmGETNONCE(overrides?: Overrides): Promise<PopulatedTransaction>;

    "ovmGETNONCE()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    ovmINCREMENTNONCE(overrides?: Overrides): Promise<PopulatedTransaction>;

    "ovmINCREMENTNONCE()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    ovmL1QUEUEORIGIN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmL1QUEUEORIGIN()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ovmL1TXORIGIN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmL1TXORIGIN()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ovmNUMBER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmNUMBER()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ovmREVERT(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmREVERT(bytes)"(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmSLOAD(
      _key: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmSLOAD(bytes32)"(
      _key: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmSSTORE(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmSSTORE(bytes32,bytes32)"(
      _key: BytesLike,
      _value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmSTATICCALL(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "ovmSTATICCALL(uint256,address,bytes)"(
      _gasLimit: BigNumberish,
      _address: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ovmTIMESTAMP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ovmTIMESTAMP()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    run(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "run(tuple,address)"(
      _transaction: {
        timestamp: BigNumberish;
        blockNumber: BigNumberish;
        l1QueueOrigin: BigNumberish;
        l1TxOrigin: string;
        entrypoint: string;
        gasLimit: BigNumberish;
        data: BytesLike;
      },
      _txStateManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
