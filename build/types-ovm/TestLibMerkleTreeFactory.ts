/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { TestLibMerkleTree } from "./TestLibMerkleTree";

export class TestLibMerkleTreeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestLibMerkleTree> {
    return super.deploy(overrides || {}) as Promise<TestLibMerkleTree>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestLibMerkleTree {
    return super.attach(address) as TestLibMerkleTree;
  }
  connect(signer: Signer): TestLibMerkleTreeFactory {
    return super.connect(signer) as TestLibMerkleTreeFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLibMerkleTree {
    return new Contract(address, _abi, signerOrProvider) as TestLibMerkleTree;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_elements",
        type: "bytes32[]"
      }
    ],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256"
      },
      {
        internalType: "bytes32[]",
        name: "_siblings",
        type: "bytes32[]"
      },
      {
        internalType: "uint256",
        name: "_totalLeaves",
        type: "uint256"
      }
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x60806040523480156100195760008061001661001f565b50505b5061008a565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561005757808601518282016040015260200161003c565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b610a3e806100996000396000f3fe608060405234801561001957600080610016610755565b50505b506004361061003f5760003560e01c80634869bfb61461004d5780637b0467a014610076575b60008061004a610755565b50505b61006061005b36600461085e565b610096565b60405161006d9190610928565b60405180910390f35b6100896100843660046108ab565b6100a9565b60405161006d919061091d565b60006100a1826100c2565b90505b919050565b60006100b88686868686610515565b9695505050505050565b60008082511161010c5760405162461bcd60e51b8152600401808060200182810382526034815260200180610a0a6034913960400191505060405180910390610109610755565b50505b815160011415610132578160008151811061012357fe5b602002602001015190506100a4565b6000604051610200810160409081527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56382527f633dc4d7da7256660a892f8f1604a44b5432649cc8ec5cb3ced4c4e6ac94dd1d60208301527f890740a8eb06ce9be422cb8da5cdafc2b58c0a5e24036c578de2a433c828ff7d818301527f3b8ec09e026fdc305365dfc94e189a81b38c7597b3d941c279f042e8206e0bd860608301527fecd50eee38e386bd62be9bedb990706951b65fe053bd9d8a521af753d139e2da60808301527fdefff6d330bb5403f63b14f33b578274160de3a50df4efecf0e0db73bcdd3da560a08301527f617bdd11f7c0a11f49db22f629387a12da7596f9d1704d7465177c63d88ec7d760c08301527f292c23a9aa1d8bea7e2435e555a4a60e379a5a35f3f452bae60121073fb6eead60e08301527fe1cea92ed99acdcb045a6726b2f87107e8a61620a232cf4d7d5b5766b3952e106101008301527f7ad66c0a68c72cb89e4fb4303841966e4062a76ab97451e3b9fb526a5ceb7f826101208301527fe026cc5a4aed3c22a58cbd3d2ac754c9352c5436f638042dca99034e836365166101408301527f3d04cffd8b46a874edf5cfae63077de85f849a660426697b06a829c70dd1409c6101608301527fad676aa337a485e4728a0b240d92b3ef7b3c372d06d189322bfd5f61f1e7203e6101808301527fa2fca4a49658f9fab7aa63289c91b7c7b6c832a6d0e69334ff5b0a3483d09dab6101a08301527f4ebfd9cd7bca2505f7bef59cc1c12ecc708fff26ae4af19abe852afe9e20c8626101c08301527f2def10d13dd169f550f578bda343d9717a138562e0093b380a1120789d53cf106101e0830152909150600090604051818152601f19601f83011681016020016040529080156103d5576020820181803683370190505b509050600080600086519050600080805b60018411156104f25750506002820460018084161460005b8281101561046e578a816002028151811061041557fe5b602002602001015196508a816002026001018151811061043157fe5b6020026020010151955086602089015285604089015287805190602001208b828151811061045b57fe5b60209081029190910101526001016103fe565b5080156104d15789600185038151811061048457fe5b6020026020010151955087836010811061049a57fe5b602002015160001b945085602088015284604088015286805190602001208a83815181106104c457fe5b6020026020010181815250505b806104dd5760006104e0565b60015b60ff16820193506001909201916103e6565b896000815181106104ff57fe5b60200260200101519a9950505050505050505050565b600080821161055e5760405162461bcd60e51b8152600401808060200182810382526037815260200180610986603791396040019150506040518091039061055b610755565b50505b8184106105a55760405162461bcd60e51b815260040180806020018281038252602481526020018061093260249139604001915050604051809103906105a2610755565b50505b6105ae826106b5565b8351146105f55760405162461bcd60e51b815260040180806020018281038252604d8152602001806109bd604d9139606001915050604051809103906105f2610755565b50505b8460005b84518110156106a85785600116600114156106575784818151811061061a57fe5b602002602001015182604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120915061069c565b8185828151811061066457fe5b602002602001015160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012091505b600195861c95016105f9565b5090951495945050505050565b60008082116106fe5760405162461bcd60e51b815260040180806020018281038252603081526020018061095660309139604001915050604051809103906106fb610755565b50505b816001141561070f575060006100a4565b81600060805b6001811061073f576000196001821b01811b8316156107375791821c91908101905b60011c610715565b506001811b841461074e576001015b9392505050565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561078d578086015182820160400152602001610772565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b600082601f8301126107d95780816107d6610755565b50505b8135602067ffffffffffffffff808311156107f057fe5b8183026040518382820101818110848211171561080957fe5b6040528481528381019250868401828801850189101561083057868761082d610755565b50505b8692505b85831015610852578035845292840192600192909201918401610834565b50979650505050505050565b600060208284031215610878578081610875610755565b50505b813567ffffffffffffffff811115610897578182610894610755565b50505b6108a3848285016107c0565b949350505050565b600080600080600060a086880312156108cb5780816108c8610755565b50505b853594506020860135935060408601359250606086013567ffffffffffffffff8111156108ff5781826108fc610755565b50505b61090b888289016107c0565b95989497509295608001359392505050565b901515815260200190565b9081526020019056fe4c69625f4d65726b6c65547265653a20496e646578206f7574206f6620626f756e64732e4c69625f4d65726b6c65547265653a2043616e6e6f7420636f6d70757465206365696c286c6f675f3229206f6620302e4c69625f4d65726b6c65547265653a20546f74616c206c6561766573206d7573742062652067726561746572207468616e207a65726f2e4c69625f4d65726b6c65547265653a20546f74616c207369626c696e677320646f6573206e6f7420636f72726563746c7920636f72726573706f6e6420746f20746f74616c206c65617665732e4c69625f4d65726b6c65547265653a204d7573742070726f76696465206174206c65617374206f6e65206c65616620686173682e";
