/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TestLibBytes32UtilsInterface extends ethers.utils.Interface {
  functions: {
    "fromAddress(address)": FunctionFragment;
    "fromBool(bool)": FunctionFragment;
    "toAddress(bytes32)": FunctionFragment;
    "toBool(bytes32)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "fromAddress", values: [string]): string;
  encodeFunctionData(functionFragment: "fromBool", values: [boolean]): string;
  encodeFunctionData(
    functionFragment: "toAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "toBool", values: [BytesLike]): string;

  decodeFunctionResult(
    functionFragment: "fromAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "fromBool", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toAddress", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "toBool", data: BytesLike): Result;

  events: {};
}

export class TestLibBytes32Utils extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TestLibBytes32UtilsInterface;

  functions: {
    fromAddress(
      _in: string,
      overrides?: CallOverrides
    ): Promise<{
      _out: string;
      0: string;
    }>;

    "fromAddress(address)"(
      _in: string,
      overrides?: CallOverrides
    ): Promise<{
      _out: string;
      0: string;
    }>;

    fromBool(
      _in: boolean,
      overrides?: CallOverrides
    ): Promise<{
      _out: string;
      0: string;
    }>;

    "fromBool(bool)"(
      _in: boolean,
      overrides?: CallOverrides
    ): Promise<{
      _out: string;
      0: string;
    }>;

    toAddress(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _out: string;
      0: string;
    }>;

    "toAddress(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _out: string;
      0: string;
    }>;

    toBool(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _out: boolean;
      0: boolean;
    }>;

    "toBool(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      _out: boolean;
      0: boolean;
    }>;
  };

  fromAddress(_in: string, overrides?: CallOverrides): Promise<string>;

  "fromAddress(address)"(
    _in: string,
    overrides?: CallOverrides
  ): Promise<string>;

  fromBool(_in: boolean, overrides?: CallOverrides): Promise<string>;

  "fromBool(bool)"(_in: boolean, overrides?: CallOverrides): Promise<string>;

  toAddress(_in: BytesLike, overrides?: CallOverrides): Promise<string>;

  "toAddress(bytes32)"(
    _in: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  toBool(_in: BytesLike, overrides?: CallOverrides): Promise<boolean>;

  "toBool(bytes32)"(
    _in: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    fromAddress(_in: string, overrides?: CallOverrides): Promise<string>;

    "fromAddress(address)"(
      _in: string,
      overrides?: CallOverrides
    ): Promise<string>;

    fromBool(_in: boolean, overrides?: CallOverrides): Promise<string>;

    "fromBool(bool)"(_in: boolean, overrides?: CallOverrides): Promise<string>;

    toAddress(_in: BytesLike, overrides?: CallOverrides): Promise<string>;

    "toAddress(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    toBool(_in: BytesLike, overrides?: CallOverrides): Promise<boolean>;

    "toBool(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    fromAddress(_in: string, overrides?: CallOverrides): Promise<BigNumber>;

    "fromAddress(address)"(
      _in: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fromBool(_in: boolean, overrides?: CallOverrides): Promise<BigNumber>;

    "fromBool(bool)"(
      _in: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toAddress(_in: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "toAddress(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toBool(_in: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "toBool(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    fromAddress(
      _in: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "fromAddress(address)"(
      _in: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fromBool(
      _in: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "fromBool(bool)"(
      _in: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toAddress(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "toAddress(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toBool(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "toBool(bytes32)"(
      _in: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
