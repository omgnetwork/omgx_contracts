/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TestLibMerkleTreeInterface extends ethers.utils.Interface {
  functions: {
    "getMerkleRoot(bytes32[])": FunctionFragment;
    "verify(bytes32,bytes32,uint256,bytes32[],uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getMerkleRoot",
    values: [BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "verify",
    values: [BytesLike, BytesLike, BigNumberish, BytesLike[], BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getMerkleRoot",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "verify", data: BytesLike): Result;

  events: {};
}

export class TestLibMerkleTree extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TestLibMerkleTreeInterface;

  functions: {
    getMerkleRoot(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getMerkleRoot(bytes32[])"(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    verify(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "verify(bytes32,bytes32,uint256,bytes32[],uint256)"(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;
  };

  getMerkleRoot(
    _elements: BytesLike[],
    overrides?: CallOverrides
  ): Promise<string>;

  "getMerkleRoot(bytes32[])"(
    _elements: BytesLike[],
    overrides?: CallOverrides
  ): Promise<string>;

  verify(
    _root: BytesLike,
    _leaf: BytesLike,
    _index: BigNumberish,
    _siblings: BytesLike[],
    _totalLeaves: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "verify(bytes32,bytes32,uint256,bytes32[],uint256)"(
    _root: BytesLike,
    _leaf: BytesLike,
    _index: BigNumberish,
    _siblings: BytesLike[],
    _totalLeaves: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    getMerkleRoot(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<string>;

    "getMerkleRoot(bytes32[])"(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<string>;

    verify(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "verify(bytes32,bytes32,uint256,bytes32[],uint256)"(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    getMerkleRoot(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMerkleRoot(bytes32[])"(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    verify(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "verify(bytes32,bytes32,uint256,bytes32[],uint256)"(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getMerkleRoot(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMerkleRoot(bytes32[])"(
      _elements: BytesLike[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    verify(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "verify(bytes32,bytes32,uint256,bytes32[],uint256)"(
      _root: BytesLike,
      _leaf: BytesLike,
      _index: BigNumberish,
      _siblings: BytesLike[],
      _totalLeaves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
